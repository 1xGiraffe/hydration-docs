"use strict";(self.webpackChunkhydra_dx_docs=self.webpackChunkhydra_dx_docs||[]).push([[8232],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),u=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(d.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(t),h=i,f=c["".concat(d,".").concat(h)]||c[h]||p[h]||a;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=h;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},1032:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var r=t(3117),i=(t(7294),t(3905)),a=t(4996);const l={id:"build_dev_chain",title:"Einrichten einer Dev-Chain"},o=void 0,d={unversionedId:"build_dev_chain",id:"build_dev_chain",title:"Einrichten einer Dev-Chain",description:"Dieser Abschnitt f\xfchrt Sie durch den Prozess des Einrichtens einer lokalen HydraDX-Chain f\xfcr die Entwicklung.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/build_dev_chain.md",sourceDirName:".",slug:"/build_dev_chain",permalink:"/de/build_dev_chain",draft:!1,editUrl:"https://github.com/galacticcouncil/HydraDX-docs/edit/main/docs/build_dev_chain.md",tags:[],version:"current",frontMatter:{id:"build_dev_chain",title:"Einrichten einer Dev-Chain"},sidebar:"sidebar",previous:{title:"Intro to Development",permalink:"/de/dev_intro"},next:{title:"HydraDX Crowdloan",permalink:"/de/archive_hydradx_crowdloan"}},u={},s=[{value:"01 Abh\xe4ngigkeiten installieren",id:"01-install-dependencies",level:2},{value:"02 Build",id:"02-build",level:2},{value:"03 Ausf\xfchren",id:"03-run",level:2},{value:"04 Mit der lokalen Chain verbinden",id:"04-connect-to-your-local-chain-instance",level:2}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Dieser Abschnitt f\xfchrt Sie durch den Prozess des Einrichtens einer lokalen HydraDX-Chain f\xfcr die Entwicklung. "),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"M\xf6chten Sie eine Validator Node einrichten? Bitte lesen Sie unseren ",(0,i.kt)("a",{parentName:"p",href:"/collator_setup"},"collator setup guide"),".")),(0,i.kt)("h2",{id:"01-install-dependencies"},"01 Abh\xe4ngigkeiten installieren"),(0,i.kt)("p",null,"Um eine lokale HydraDX-Chain f\xfcr die Entwicklung vorzubereiten, muss Ihr Computer alle Abh\xe4ngigkeiten f\xfcr die Ausf\xfchrung einer Substrat-Chain abdecken. Sie m\xfcssen eine Rust-Entwicklerumgebung installieren und sicherstellen, dass sie ordnungsgem\xe4\xdf f\xfcr das Kompilieren des Substrate-Laufzeitcodes auf das WebAssembly (Wasm) konfiguriert ist."),(0,i.kt)("p",null,"Sie k\xf6nnen alle Abh\xe4ngigkeiten manuell installieren und konfigurieren, lesen Sie dazu bitte den ",(0,i.kt)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/getting-started"},"Substrate guide"),", oder Sie k\xf6nnen dieses Skript die ganze Arbeit f\xfcr Sie erledigen lassen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl https://getsubstrate.io -sSf | bash -s -- --fast\n$ source ~/.cargo/env\n")),(0,i.kt)("h2",{id:"02-build"},"02 Build"),(0,i.kt)("p",null,"Erstellen Sie die Wasm- und native Ausf\xfchrungsumgebungen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Rufen Sie die Quelle der neuesten stabilen Version ab\n$ git clone https://github.com/galacticcouncil/HydraDX-node -b stable\n\n# Erstellen Sie die Bin\xe4rdatei\n$ cd HydraDX-node/\n$ cargo build --release\n")),(0,i.kt)("p",null,"Sie k\xf6nnen die Bin\xe4rdatei hier finden: ",(0,i.kt)("inlineCode",{parentName:"p"},"./target/release/hydra-dx"),"."),(0,i.kt)("h2",{id:"03-run"},"03 Ausf\xfchren"),(0,i.kt)("p",null,"Bevor Sie Ihr Build ausf\xfchren, k\xf6nnen Sie alle vorhandenen Dev-Chains auf Ihrem Computer l\xf6schen (dies m\xfcssen Sie im Entwicklungsprozess h\xe4ufig tun):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./target/release/hydra-dx purge-chain --dev\n")),(0,i.kt)("p",null,"F\xfchren Sie Ihr Build mit einem der folgenden Befehle aus:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./target/release/hydra-dx --dev\n\n# F\xfchren Sie mit detaillierter Protokollierung aus\n$ RUST_LOG=debug RUST_BACKTRACE=1 ./target/release/hydra-dx -lruntime=debug --dev\n")),(0,i.kt)("h2",{id:"04-connect-to-your-local-chain-instance"},"04 Mit der lokalen Chain verbinden"),(0,i.kt)("p",null,'Sie k\xf6nnen mit Polkadot/apps eine Verbindung zu Ihrer HydraDX Dev-Node herstellen indem Sie das Netzwerk in "Development" \xe4ndern. Sie k\xf6nnen auch diesen Link verwenden:\n',(0,i.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer"},"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer")),(0,i.kt)("img",{alt:"connect to node",src:(0,a.Z)("/building/connect-to-node.jpg")}))}p.isMDXComponent=!0}}]);