"use strict";(self.webpackChunkhydra_dx_docs=self.webpackChunkhydra_dx_docs||[]).push([[7280],{4933:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=s(4848),t=s(8453),o=s(6025);const i={id:"node_monitoring",title:"Node Monitoring"},a=void 0,l={id:"node_monitoring",title:"Node Monitoring",description:"In this chapter we will walk you through the setup of local monitoring for your validator node.",source:"@site/docs/node_monitoring.md",sourceDirName:".",slug:"/node_monitoring",permalink:"/node_monitoring",draft:!1,unlisted:!1,editUrl:"https://github.com/galacticcouncil/HydraDX-docs/edit/main/docs/node_monitoring.md",tags:[],version:"current",frontMatter:{id:"node_monitoring",title:"Node Monitoring"},sidebar:"sidebar",previous:{title:"Performance Benchmark",permalink:"/performance_benchmark"},next:{title:"Intro to Development",permalink:"/dev_intro"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Prometheus Setup",id:"prometheus-setup",level:2},{value:"User and Directories",id:"user-and-directories",level:3},{value:"Install Prometheus",id:"install-prometheus",level:3},{value:"Starting Prometheus",id:"starting-prometheus",level:3},{value:"Node Exporter",id:"node-exporter",level:2},{value:"Install Node Exporter",id:"install-node-exporter",level:3},{value:"Create a Systemd Service",id:"create-a-systemd-service",level:3},{value:"Add Scrape Job for Node Exporter",id:"add-scrape-job-for-node-exporter",level:3},{value:"Grafana Setup",id:"grafana-setup",level:2},{value:"Install Grafana",id:"install-grafana",level:3},{value:"Accessing the Web Interface",id:"accessing-the-web-interface",level:3},{value:"Configuring the Datasource",id:"configuring-the-datasource",level:3},{value:"Importing the Dashboard",id:"importing-the-dashboard",level:3}];function h(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"In this chapter we will walk you through the setup of local monitoring for your validator node."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["You must have your ",(0,r.jsx)(n.a,{href:"/collator_setup",children:"collator node"})," up and running.",(0,r.jsx)(n.br,{}),"\n","This guide was tested on Ubuntu 20.04 LTS release."]}),"\n",(0,r.jsx)(n.h2,{id:"prometheus-setup",children:"Prometheus Setup"}),"\n",(0,r.jsx)(n.p,{children:"In the first step we will set up the Prometheus server."}),"\n",(0,r.jsx)(n.h3,{id:"user-and-directories",children:"User and Directories"}),"\n",(0,r.jsx)(n.p,{children:"We create a user just for monitoring purposes which has no home directory and can't be used to log in."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo useradd --no-create-home --shell /usr/sbin/nologin prometheus\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then we create directories for the executable and the configuration file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo mkdir /etc/prometheus\n$ sudo mkdir /var/lib/prometheus\n"})}),"\n",(0,r.jsx)(n.p,{children:"Change ownership of the directories to restrict them to our new monitoring user."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo chown -R prometheus:prometheus /etc/prometheus\n$ sudo chown -R prometheus:prometheus /var/lib/prometheus\n"})}),"\n",(0,r.jsx)(n.h3,{id:"install-prometheus",children:"Install Prometheus"}),"\n",(0,r.jsxs)(n.p,{children:["Check latest version number of Prometheus at the ",(0,r.jsx)(n.a,{href:"https://github.com/prometheus/prometheus/releases/",children:"GitHub release page"}),".",(0,r.jsx)(n.br,{}),"\n","At the time of writing it is v2.34.0. Insert the latest release version in the following commands."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# download prometheus\n$ wget https://github.com/prometheus/prometheus/releases/download/v2.34.0/prometheus-2.34.0.linux-amd64.tar.gz\n\n# unpack the binaries\n$ tar xfz prometheus-*.tar.gz\n\n# enter the unpacked directory\n$ cd prometheus-2.34.0.linux-amd64\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now copy over the binaries into the local folder."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo cp ./prometheus /usr/local/bin/\n$ sudo cp ./promtool /usr/local/bin/\n"})}),"\n",(0,r.jsx)(n.p,{children:"We now need to assign those binaries to our freshly created user."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo chown prometheus:prometheus /usr/local/bin/prometheus\n$ sudo chown prometheus:prometheus /usr/local/bin/promtool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next up we'll copy the web interface and the configuration presets."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo cp -r ./consoles /etc/prometheus\n$ sudo cp -r ./console_libraries /etc/prometheus\n"})}),"\n",(0,r.jsx)(n.p,{children:"You may have guessed it already but we're also changing the ownership of those directories."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo chown -R prometheus:prometheus /etc/prometheus/consoles\n$ sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries\n"})}),"\n",(0,r.jsx)(n.p,{children:"We now have everything we need from the downloaded package so we will go one step back and do some cleanup."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ cd .. && rm -rf prometheus*\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Let's create a ",(0,r.jsx)(n.code,{children:"YAML"})," configuration file for Prometheus with the editor of your choice (nano / vim / pico)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo nano /etc/prometheus/prometheus.yml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Our config is divided in three sections:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"global"}),": sets the default values for ",(0,r.jsx)(n.code,{children:"scrape_interval"})," and the rule-execution interval with ",(0,r.jsx)(n.code,{children:"evaluation_interval"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rule_files"}),": specify rule-files the Prometheus server should load"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"scrape_configs"}),": this is where you set the monitoring-resources"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"We will keep it very basic and end up with something like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nrule_files:\n  # - "weHaveNo.rules"\n\nscrape_configs:\n  - job_name: "prometheus"\n    scrape_interval: 5s\n    static_configs:\n      - targets: ["localhost:9090"]\n  - job_name: "substrate_node"\n    scrape_interval: 5s\n    static_configs:\n      - targets: ["localhost:9615"]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The first scrape job exports data of Prometheus itself, the second one exports the HydraDX node metrics.\nWe adjusted the ",(0,r.jsx)(n.code,{children:"scrape_interval"})," of both jobs to get more detailed statistics. This overrides the global values.\nThe ",(0,r.jsx)(n.code,{children:"target"})," in ",(0,r.jsx)(n.code,{children:"static_configs"})," sets where the exporters run, we stick to the default ports here."]}),"\n",(0,r.jsx)(n.p,{children:"After saving the configuration we will - once again - change the ownership."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml\n"})}),"\n",(0,r.jsx)(n.h3,{id:"starting-prometheus",children:"Starting Prometheus"}),"\n",(0,r.jsxs)(n.p,{children:["To have Prometheus starting automatically and running in the background we'll use ",(0,r.jsx)(n.code,{children:"systemd"}),".\nCreate a new config (again with the editor of your choice):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo nano /etc/systemd/system/prometheus.service\n"})}),"\n",(0,r.jsx)(n.p,{children:"Paste the following configuration and save the file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[Unit]\n  Description=Prometheus Monitoring\n  Wants=network-online.target\n  After=network-online.target\n\n[Service]\n  User=prometheus\n  Group=prometheus\n  Type=simple\n  ExecStart=/usr/local/bin/prometheus \\\n  --config.file /etc/prometheus/prometheus.yml \\\n  --storage.tsdb.path /var/lib/prometheus/ \\\n  --web.console.templates=/etc/prometheus/consoles \\\n  --web.console.libraries=/etc/prometheus/console_libraries\n  ExecReload=/bin/kill -HUP $MAINPID\n\n[Install]\n  WantedBy=multi-user.target\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Next we will perform the following three steps:\n",(0,r.jsx)(n.code,{children:"systemctl deamon-reload"})," loads new configurations and updates existing\n",(0,r.jsx)(n.code,{children:"systemctl enable"})," activates our new service\n",(0,r.jsx)(n.code,{children:"systemctl start"})," triggers the execution of the service"]}),"\n",(0,r.jsx)(n.p,{children:"You can perform the steps above in one command by executing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo systemctl daemon-reload && systemctl enable prometheus && systemctl start prometheus\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You should now be able to access Prometheus' web interface at ",(0,r.jsx)(n.a,{href:"http://localhost:9090/",children:"http://localhost:9090/"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"node-exporter",children:"Node Exporter"}),"\n",(0,r.jsxs)(n.p,{children:["We will install Node Exporter to scrape server metrics that will be used in the dashboard.",(0,r.jsx)(n.br,{}),"\n","Please check the version number of the latest release ",(0,r.jsx)(n.a,{href:"https://github.com/prometheus/node_exporter/releases/",children:"here"})," and update the command.",(0,r.jsx)(n.br,{}),"\n","At the time of writing the latest version was ",(0,r.jsx)(n.code,{children:"1.3.1"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"install-node-exporter",children:"Install Node Exporter"}),"\n",(0,r.jsx)(n.p,{children:"Download the latest release."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Unpack the archive you just downloaded. This will create a folder called ",(0,r.jsx)(n.code,{children:"node_exporter-1.3.1.linux-amd64"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ tar xvf node_exporter-1.3.1.linux-amd64.tar.gz\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next we copy the binary into our local application directory and assign it to our monitoring user."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# copy binary\n$ sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin\n\n# set ownership\n$ sudo chown prometheus:prometheus /usr/local/bin/node_exporter\n"})}),"\n",(0,r.jsx)(n.p,{children:"We can now do some cleanup and remove the downloaded and unpacked package."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ rm -rf node_exporter*\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-a-systemd-service",children:"Create a Systemd Service"}),"\n",(0,r.jsxs)(n.p,{children:["Similar to prometheus we want Node Exporter to run as a service too.",(0,r.jsx)(n.br,{}),"\n","Create a systemd service with your editor of choice."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo nano /etc/systemd/system/node_exporter.service\n"})}),"\n",(0,r.jsx)(n.p,{children:"And paste the following configuration into it."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[Unit]\nDescription=Node Exporter\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=prometheus\nGroup=prometheus\nType=simple\nExecStart=/usr/local/bin/node_exporter\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,r.jsx)(n.p,{children:"We will now activate and start the service with this one-liner."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo systemctl daemon-reload && systemctl enable node_exporter && systemctl start node_exporter\n"})}),"\n",(0,r.jsx)(n.h3,{id:"add-scrape-job-for-node-exporter",children:"Add Scrape Job for Node Exporter"}),"\n",(0,r.jsxs)(n.p,{children:["The Node Exporter is now up and running but we need to tell Prometheus to scrape its data.",(0,r.jsx)(n.br,{}),"\n","We will open the configuration file once again with the editor of choice."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo nano /etc/prometheus/prometheus.yml\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And at the very bottom of the file we will append one more scrape config.",(0,r.jsx)(n.br,{}),"\n","Paste the following content and save the file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"  - job_name: 'node_exporter'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['localhost:9100']\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then apply the changes. A restart of the Prometheus service is required."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo systemctl restart prometheus.service \n"})}),"\n",(0,r.jsxs)(n.p,{children:["Your server metrics are now scraped and can be found in the Prometheus web interface.",(0,r.jsx)(n.br,{}),"\n","We will need them later for our dashboard."]}),"\n",(0,r.jsx)(n.h2,{id:"grafana-setup",children:"Grafana Setup"}),"\n",(0,r.jsxs)(n.p,{children:["We can see our metrics in the web interface, but that's not how we want to monitor it.",(0,r.jsx)(n.br,{}),"\n","We want it nice and beautiful. That's where Grafana comes into play."]}),"\n",(0,r.jsx)(n.h3,{id:"install-grafana",children:"Install Grafana"}),"\n",(0,r.jsxs)(n.p,{children:["Please check what's the latest Grafana Version ",(0,r.jsx)(n.a,{href:"https://grafana.com/grafana/download?platform=linux",children:"with this link"}),".",(0,r.jsx)(n.br,{}),"\n","You can either change the version number in the following commands or copy the install commands directly from the link.",(0,r.jsx)(n.br,{}),"\n","At the time of writing the latest version was ",(0,r.jsx)(n.code,{children:"8.4.6"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo apt-get install -y adduser libfontconfig1\n$ wget https://dl.grafana.com/oss/release/grafana_8.4.6_amd64.deb\n$ sudo dpkg -i grafana_8.4.6_amd64.deb\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The package comes with a builtin ",(0,r.jsx)(n.code,{children:"systemd"}),"-service which we will configure and start just like the Prometheus service."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"$ sudo systemctl daemon-reload && sudo systemctl enable grafana-server && sudo systemctl start grafana-server\n"})}),"\n",(0,r.jsx)(n.h3,{id:"accessing-the-web-interface",children:"Accessing the Web Interface"}),"\n",(0,r.jsxs)(n.p,{children:["We'll be able to open the Grafana web interface at ",(0,r.jsx)(n.a,{href:"http://localhost:3000/",children:"http://localhost:3000/"}),".",(0,r.jsx)(n.br,{}),"\n","The default login Grafana is:",(0,r.jsx)(n.br,{}),"\n","User: ",(0,r.jsx)(n.code,{children:"admin"}),(0,r.jsx)(n.br,{}),"\n","Password: ",(0,r.jsx)(n.code,{children:"admin"})]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:(0,o.A)("/node-monitoring/grafana-home.png")})}),"\n",(0,r.jsx)(n.h3,{id:"configuring-the-datasource",children:"Configuring the Datasource"}),"\n",(0,r.jsxs)(n.p,{children:["Please click the settings gear in the menu and select datasources.",(0,r.jsx)(n.br,{}),"\n",'In the next window you click "Add Datasource" and select "Prometheus".']}),"\n",(0,r.jsxs)(n.p,{children:["In the following form you don't need to change anything but the URL.",(0,r.jsx)(n.br,{}),"\n","Set ",(0,r.jsx)(n.code,{children:"http://localhost:9090/"})," and click ",(0,r.jsx)(n.code,{children:"Save and Test"}),"."]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:(0,o.A)("/node-monitoring/grafana-datasource.png")})}),"\n",(0,r.jsx)(n.h3,{id:"importing-the-dashboard",children:"Importing the Dashboard"}),"\n",(0,r.jsxs)(n.p,{children:["Please click the ",(0,r.jsx)(n.code,{children:"Plus"}),"-button in the main navigation and select ",(0,r.jsx)(n.code,{children:"import"}),"."]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:(0,o.A)("/node-monitoring/grafana-import.png")})}),"\n",(0,r.jsxs)(n.p,{children:["We will use the ",(0,r.jsx)(n.a,{href:"https://grafana.com/grafana/dashboards/14158",children:"HydraDX Dashboard"})," layout, so simply input the id ",(0,r.jsx)(n.code,{children:"14158"})," and hit the ",(0,r.jsx)(n.code,{children:"Load"}),"-button."]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:(0,o.A)("/node-monitoring/grafana-import-options.png")})}),"\n",(0,r.jsxs)(n.p,{children:["You don't need much configuration here, just make sure Prometheus is used as the datasource.",(0,r.jsx)(n.br,{}),"\n","You can now finish the import."]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:(0,o.A)("/node-monitoring/grafana-dashboard.png")})}),"\n",(0,r.jsxs)(n.p,{children:["You should now see your dashboard right away.",(0,r.jsx)(n.br,{}),"\n","If some panels are empty please ensure your selection above the panels is like this:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Chain Metrics"}),": Substrate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Chain Instance"}),": localhost:9615"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Server Job"}),": node_exporter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Server Host"}),": localhost:9100"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);